# work around NPM "too many files open" bug
ulimit -n 2323

# initialize rbenv
eval "$(rbenv init -)"

# Default for pngcrush
alias png='pngcrush -reduce -brute'
# Syntax-highlighting cat on the command line
# requires source-highlight from Homebrew
alias ccat='src-hilite-lesspipe.sh'
# MARCgrep.pl
# see: en.pusc.it/bib/MARCgrep
alias mgrep='MARCgrep.pl'

# Check if brew is defined, run Homebrew-specific commands
# Source for this condition:
# stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script#answer-4785518
if command -v "brew" &> /dev/null 2>&1; then
    # Git Bash Completion for Homebrew package
    source /usr/local/etc/bash_completion.d/git-completion.bash

    # Z from Homebrew
    source `brew --prefix`/etc/profile.d/z.sh

    # BASH completion for Homebrew
    # See: github.com/mxcl/homebrew/wiki/Tips-N%27-Tricks
    source $(brew --prefix)/Library/Contributions/brew_bash_completion.sh
fi

# If npm is available, add its bash completion
if command -v "npm" &> /dev/null 2>&1; then
		# See npm -l for command usage
		source <(npm completion)
fi

# Show current directory (not full path only top-level)
# in iTerm tab name
if [ $ITERM_SESSION_ID ]; then
	export PROMPT_COMMAND='echo -ne "\033];${PWD##*/}\007"; ':"$PROMPT_COMMAND";
fi

#########################
# My Personal Functions #
#########################

# Top 10 BASH commands used
# from stackoverflow.com/questions/68372/what-is-your-single-most-favorite-command-line-trick-using-bash#answer-68390
function top10() {
    history | awk 'BEGIN {FS="[ \t]+|\\|"} {print $3}' | sort | uniq -c | sort -nr | head
}

# internal functions for use in cheat sheets below
function colorcheat() {
    echo -n "$ORANGE$1$RESET"
    echo -e "$2"
}
function cheattitle() {
    echo -e "$PURPLE\t\t$1\n$RESET"
}

# Misc tips from above link
function cheatmoar() {
    cheattitle "more bash tricks"
    colorcheat '^+R' "\t\t-> reverse search through history"
    colorcheat 'Quick Copy' "\t-> cp /home/foo/realllylongname.cpp{,-old}\n\t\tExpands to:\n\t\tcp /home/foo/realllylongname.cpp /home/foo/realllylongname.cpp-old"
    colorcheat 'cd -' "\t\t-> go back to previous directory"
    colorcheat '^str^str2' "\t-> replaces str in the last cmd with str2 & executes it"
    echo -en "$ORANGE" && echo -en '! tricks ' && echo -en "$RESET\t-> the " && echo -e '!$, !^ & !* expandos return, from the most recent line:\n\t\tthe last item, first non-command item, & all non-command items'
    echo -en "$ORANGE" && echo -en 'cmd !!:* ' && echo -e "$RESET\t-> run cmd with the previous ones' arguments"
    colorcheat 'ESC .' "\t\t-> inserts arguments from last command"
    colorcheat '\cmd' "\t\t-> do not use the alias for 'cmd'"
    echo -en "$ORANGE" && echo -en '!?foo?:p ' && echo -en "$RESET\t-> search for last cmd containing 'foo,' " && echo -e '!?foo executes'
    echo
}

# Print cheat sheet of dotfiles functions/aliases
function cheat() {
    cheattitle "bash cheatsheet"
    colorcheat 'c' "\t\t-> trim new lines & copy to clipboard"
    colorcheat '^+A' "\t\t-> jump to beginning of line"
    colorcheat '^+E' "\t\t-> jump to end of line"
    colorcheat '^+K' "\t\t-> delete to end of line"
    colorcheat '^+U' "\t\t-> delete to beginning of line"
    colorcheat '^+W' "\t\t-> delete word next to cursor"
    colorcheat 'dataurl' "\t\t-> make data URL from file"
    colorcheat 'emptytrash' "\t-> empties the trash"
    colorcheat 'gurl' "\t\t-> Gzip->enabled curl"
    colorcheat 'httpcompression' "\t-> test if URL uses Gzip"
    colorcheat 'lsd' "\t\t-> list directories only"
    colorcheat 'note $HEAD $MSG' "\t-> add to Notes app"
    colorcheat 'o' "\t\t-> alias for open"
    colorcheat 'oo' "\t\t-> open current directory"
    colorcheat 'remind' "\t\t-> add string as new in Reminders app"
    colorcheat 'sudo !!' "\t\t-> run previous command with sudo"
    colorcheat 'spot(off|on)' "\t-> turn Spotlight off & on"
    colorcheat 'tar -zxvf $FILE' "\t-> unzip tar ball"
    colorcheat 'urlencode' "\t-> URL encode string"
    echo
}

function gcheat() {
    # template: echo -e "$ORANGE cmd \t\t\t$RESETâ€” description"
    cheattitle "git cheatsheet"
    colorcheat 'g d' "\t\t\t-> diff between latest commit & current state"
    colorcheat 'g di $N' "\t\t\t-> diff betw N commits ago & current state"
    colorcheat 'g go X' "\t\t\t-> goto branch X, create if doesn't exist"
    colorcheat 'g l' "\t\t\t-> view history graph & log"
    colorcheat 'g reset $HASH' "\t\t-> revert to commit HASH but keep changes in working dir\n\t\t\tadd --hard flag to erase changes"
    colorcheat 'g checkout -- <file>' "\t-> unstage changes to <file>"
    echo
}

# Open series of work URLs
function work() {
    open 'https://libanswers.com/login.php?iid=723&iid=723' 'https://drive.google.com/#activity' 'https://www.rememberthemilk.com/home/phette23/'
}

# sass --watch syntax is too verbose
function sw() {
    sass --watch $1:$2 --style compressed
}

function backup() {
    if [ -d /Volumes/share ]; then
        # flags:
        # a = archive mode, makes recursive & a host of other options
        # v = verbose
        # u = if destination file is more recent, keep it
        # z = use compression
        rsync -avuz --progress ~/Music /Volumes/share/
        rsync -avuz --progress ~/Movies/ /Volumes/share/Video/
        rsync -avuz --progress ~/Documents/zzzArc /Volumes/share/
        # b = create backups
        rsync -avuzb --progress ~/Documents/OvalII.sparsebundle /Volumes/share/OvalII.sparsebundle
        rsync -avuzb --progress ~/Documents/nsn.dmg /Volumes/share/nsn.dmg
    else
        echo "Connect to backup drive first."
    fi
}
